#!/bin/bash

# Get the current branch name
current_branch=$(git symbolic-ref --short HEAD)

# Get the default branch (checking common names)
default_branch=""
for branch in "development" "master" "main"; do
    if git show-ref --verify --quiet "refs/heads/$branch"; then
        default_branch="$branch"
        break
    fi
done

if [ -z "$default_branch" ]; then
    echo "Could not determine default branch. Skipping squash."
    exit 0
fi

# Check if we're on a feature branch
if [[ $current_branch == feature/* ]]; then
    echo "On feature branch: $current_branch"
    
    # Check if there are any commits to squash
    commit_count=$(git rev-list --count $default_branch..$current_branch)
    
    if [ "$commit_count" -gt 1 ]; then
        echo "Multiple commits detected ($commit_count commits). Preparing to squash..."
        
        # Store the current commit message
        current_msg=$(git log -1 --pretty=%B)
        
        # Get the merge base
        merge_base=$(git merge-base $default_branch HEAD)
        
        # Perform the squash
        git reset --soft "$merge_base"
        
        # Create a new commit with a meaningful message
        echo "Creating squashed commit..."
        git commit -m "feat: $current_msg

This commit squashes $commit_count commits from branch '$current_branch'"
        
        # Force push the squashed commit
        echo "Force pushing squashed commit..."
        git push origin $current_branch --force-with-lease
        
        echo "Successfully squashed and pushed commits!"
        exit 0
    else
        echo "Only one commit found. No need to squash."
        exit 0
    fi
fi

# If we're not on a feature branch, continue with push
exit 0